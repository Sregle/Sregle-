name: Universal WP Plugin Build & Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Detect plugin folder name
        run: |
          PLUGIN_NAME=$(basename $GITHUB_REPOSITORY)
          echo "PLUGIN_NAME=$PLUGIN_NAME" >> $GITHUB_ENV
          PRETTY_NAME=$(echo "$PLUGIN_NAME" | sed -E 's/[-_]+/ /g' | sed -E 's/\b(.)/\u\1/g')
          echo "PRETTY_NAME=$PRETTY_NAME" >> $GITHUB_ENV

      - name: Create plugin zip
        run: |
          mkdir -p build/${PLUGIN_NAME}
          rsync -av --progress ./ build/${PLUGIN_NAME} \
            --exclude build --exclude .git --exclude .github
          cd build
          zip -r ${PLUGIN_NAME}.zip ${PLUGIN_NAME}

      - name: Upload zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-zip
          path: build/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }} # âœ… Required to push changelog

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: plugin-zip
          path: .

      - name: Generate Release Notes
        id: notes
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            let body;
            try {
              const { data } = await github.rest.repos.generateReleaseNotes({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tag,
                target_commitish: context.sha
              });
              body = data.body || `Automated release for ${tag}`;
            } catch (e) {
              core.warning(`Failed to generate release notes: ${e.message}`);
              body = `Automated release for ${tag}`;
            }
            core.setOutput("body", body);
            core.setOutput("tag", tag);

      - name: Update CHANGELOG.md
        run: |
          TAG=${{ steps.notes.outputs.tag }}
          BODY="${{ steps.notes.outputs.body }}"
          echo "## ${TAG}" >> NEW_CHANGELOG.md
          echo "" >> NEW_CHANGELOG.md
          echo "${BODY}" >> NEW_CHANGELOG.md
          echo "" >> NEW_CHANGELOG.md
          cat CHANGELOG.md >> NEW_CHANGELOG.md 2>/dev/null || true
          mv NEW_CHANGELOG.md CHANGELOG.md

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for ${TAG}" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.notes.outputs.tag }}
          name: "${{ env.PRETTY_NAME }} ${{ steps.notes.outputs.tag }}"
          files: "*.zip"
          body: ${{ steps.notes.outputs.body }}
          allowUpdates: true
          token: ${{ secrets.GH_PAT }}
