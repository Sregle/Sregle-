name: Universal WP Plugin Build & Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Detect plugin folder name
        run: |
          PLUGIN_NAME=$(basename $GITHUB_REPOSITORY)
          echo "PLUGIN_NAME=$PLUGIN_NAME" >> $GITHUB_ENV
          # Convert "sregle-whatsapp-bot" → "Sregle WhatsApp Bot"
          PRETTY_NAME=$(echo "$PLUGIN_NAME" | sed -E 's/[-_]+/ /g' | sed -E 's/\b(.)/\u\1/g')
          echo "PRETTY_NAME=$PRETTY_NAME" >> $GITHUB_ENV

      - name: Create plugin zip
        run: |
          mkdir -p build/${PLUGIN_NAME}
          rsync -av --progress ./ build/${PLUGIN_NAME} \
            --exclude build --exclude .git --exclude .github
          cd build
          zip -r ${PLUGIN_NAME}.zip ${PLUGIN_NAME}

      - name: Upload zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-zip
          path: build/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: plugin-zip
          path: .

      # ✅ Generate release notes automatically from commits
      - name: Generate Release Notes
        id: notes
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const { data } = await github.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              target_commitish: context.sha
            });
            return {
              body: data.body,
              tag: tag
            };

      # ✅ Create GitHub Release with pretty plugin name
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.notes.outputs.tag }}
          name: "${{ env.PRETTY_NAME }} ${{ steps.notes.outputs.tag }}"
          files: "*.zip"
          body: ${{ steps.notes.outputs.body }}
          allowUpdates: true
          token: ${{ secrets.GH_PAT }}
